module top_module(
    input clk,
    input areset,    // Asynchronous reset to OFF
    input j,
    input k,
    output out); //  

    parameter OFF=0, ON=1; 
    reg state, next_state;

    always @(*) begin
        case(state)
            ON: next_state <=(k==1)?OFF:ON;
            OFF: next_state <=(j==0)?OFF:ON;
            default:next_state<=state;
        endcase// State transition logic
    end

    always @(posedge clk, posedge areset) begin
        if(areset)
            begin
                state<=OFF;
                //out=1'b0;
            end
        else 
            state<=next_state;
        // State flip-flops with asynchronous reset
    end

    assign out=(state==ON)?1'b1:1'b0;// Output logic
    // assign out = (state == ...);

endmodule
