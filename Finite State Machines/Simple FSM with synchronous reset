module top_module(clk, reset, in, out);
    input clk;
    input reset;    // Synchronous reset to state B
    input in;
    output out;//  
    reg out;

    parameter A=1'b1,B=1'b0;// Fill in state name declarations

    reg present_state, next_state;

    always @(posedge clk) begin
        if (reset)  
            begin
            present_state=B;
            out=1'b1;
            end// Fill in reset logic
        else begin
            case (present_state)
             A:next_state=in?A:B;
                B:next_state=in?B:A;
                default:next_state=B;// Fill in state transition logic
            endcase

            // State flip-flops
            present_state = next_state;   

            case (present_state)
            A:out= 1'b0;
                B:out=1'b1;// Fill in output logic
            endcase
        end
    end

endmodule
